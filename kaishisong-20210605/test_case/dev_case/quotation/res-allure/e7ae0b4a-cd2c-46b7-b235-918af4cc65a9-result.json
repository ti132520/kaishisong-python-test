{"name": "报价测试", "status": "broken", "statusDetails": {"message": "TypeError: 'str' object is not callable", "trace": "self = <test_case.dev_case.quotation.test_kaishisong_dev_quotation.TestKaiShiSong object at 0x10d4d0d00>\nfrom_data = {'from_address': '12栋', 'item_select': '文件证件', 'remarke': '', 'time': '今天 立即取件', ...}\n\n    @allure.title(\"报价测试\")\n    @pytest.mark.parametrize('from_data', yaml.safe_load(open('../../../test_data/from_data.yaml', 'r')))\n    def test_quotation(self, from_data: dict):\n    \n>       self.main.fill_in_from(from_data.get('from_address'), from_data.get('to_address'),\n                               item_select=from_data.get('item_select'), select_time=from_data.get('time'),\n                               weight=from_data.get(\"weight\"))\n\ntest_kaishisong_dev_quotation.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_page.main_page.MainPage object at 0x10d0df760>\nfrom_address = '12栋', to_address = '完美世界', item_select = '文件证件', weight = None\nselect_time = '今天 立即取件'\n\n    def fill_in_from(self, from_address, to_address, item_select, weight, select_time):\n        # 选择寄件地址\n        self.click_element(self.__by_of_com_input_address)\n        time.sleep(3)\n        self.swipe_find_element(from_address).click()\n    \n        # 选择收件地址\n        self.click_element(self.__by_of_com_out_address)\n        time.sleep(3)\n        self.swipe_find_element(to_address).click()\n        # 物品选择\n        self.click_element(MobileBy.XPATH, f'//*[contains(@text, \"{item_select}\")]')\n>       selected_height = self.find_element(self.__by_of_selected_weight).text()\nE       TypeError: 'str' object is not callable\n\n../../../test_page/main_page.py:45: TypeError"}, "attachments": [{"name": "log", "source": "2599e1fe-c746-4282-8160-61272ce4988d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "from_data", "value": "{'from_address': '12栋', 'to_address': '完美世界', 'wegiht': '5', 'item_select': '文件证件', 'remarke': '', 'time': '今天 立即取件'}"}], "start": 1622883565764, "stop": 1622883581449, "uuid": "dcad7800-3384-4fcb-a70e-0fd870de4767", "historyId": "484acb34c77d4b6ed9cbff0558d214db", "testCaseId": "321955b6535e91700bb31f820357e448", "fullName": "test_case.dev_case.quotation.test_kaishisong_dev_quotation.TestKaiShiSong#test_quotation", "labels": [{"name": "parentSuite", "value": "test_case.dev_case.quotation"}, {"name": "suite", "value": "test_kaishisong_dev_quotation"}, {"name": "subSuite", "value": "TestKaiShiSong"}, {"name": "host", "value": "macdeMBP"}, {"name": "thread", "value": "32711-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.dev_case.quotation.test_kaishisong_dev_quotation"}]}